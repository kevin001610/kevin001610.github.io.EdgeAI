#include <WiFi.h>
#include <WiFiUdp.h>
#include "GenAI.h"
#include "VideoStream.h"
#include "SPI.h"
#include "AmebaILI9341.h"
#include "TJpg_Decoder.h"
#include "AmebaFatFS.h"


WiFiSSLClient client;
GenAI llm;
GenAI tts;


AmebaFatFS fs;
String mp3Filename = "";
String Gemini_key = "AIzaSyBzpwqZ3fKDAVSJAkgGkaiUFgH1Ais0WuA";
VideoSetting config(768, 768, CAM_FPS, VIDEO_JPEG, 1);
#define CHANNEL 0


uint32_t img_addr = 0;
uint32_t img_len = 0;
const int buttonPin = 1;


String prompt_msg = "請問這張圖片中的情緒是什麼？回答只能有以下情緒語詞：開心、悲傷";


#define TFT_RESET 5
#define TFT_DC    4
#define TFT_CS    SPI_SS
AmebaILI9341 tft = AmebaILI9341(TFT_CS, TFT_DC, TFT_RESET);


bool tft_output(int16_t x, int16_t y, uint16_t w, uint16_t h, uint16_t *bitmap) {
    tft.drawBitmap(x, y, w, h, bitmap);
    return 1;
}


void initWiFi() {
    for (int i = 0; i < 2; i++) {
        WiFi.begin("Wowo", "my89371546");
        delay(1000);
        Serial.println("");
        Serial.print("Connecting to ");
        Serial.println("Wowo");
        uint32_t StartTime = millis();
        while (WiFi.status() != WL_CONNECTED) {
            delay(500);
            if ((StartTime + 5000) < millis()) break;
        }
        if (WiFi.status() == WL_CONNECTED) {
            Serial.println("");
            Serial.println("STAIP address: ");
            Serial.println(WiFi.localIP());
            Serial.println("");
            break;
        }
    }
}


void init_tft() {
    tft.begin();
    tft.setRotation(2);
    tft.clr();
    tft.setCursor(0, 0);
    tft.setForeground(ILI9341_GREEN);
    tft.setFontSize(2);
}


void setup() {
    Serial.begin(115200);
    SPI.setDefaultFrequency(20000000);
    initWiFi();
    config.setRotation(0);
    Camera.configVideoChannel(CHANNEL, config);
    Camera.videoInit();
    Camera.channelBegin(CHANNEL);
    pinMode(buttonPin, INPUT);
    pinMode(LED_B, OUTPUT);
    init_tft();
    tft.println("Emotion Detection & Music");
    TJpgDec.setJpgScale(2);
    TJpgDec.setCallback(tft_output);
}


void loop() {
    tft.setCursor(0, 1);
    tft.println("Press button to capture image");
    if (digitalRead(buttonPin) == 1) {
        tft.println("Capturing Image");
        for (int count = 0; count < 3; count++) {
            digitalWrite(LED_B, HIGH);
            delay(500);
            digitalWrite(LED_B, LOW);
            delay(500);
        }
        Camera.getImage(0, &img_addr, &img_len);
        TJpgDec.drawJpg(0, 0, (uint8_t *)img_addr, img_len);


        // Emotion detection
        String emotion = llm.geminivision(Gemini_key, "gemini-2.0-flash", prompt_msg, img_addr, img_len, client);
        Serial.println("Detected emotion: " + emotion);
        tft.println("Emotion: " + emotion);


        // Recommend and set song based on emotion
        if (emotion.indexOf("高興") != -1 || emotion.indexOf("開心") != -1 || emotion.indexOf("快樂") != -1||emotion.indexOf("微笑") != -1||emotion.indexOf("輕鬆") != -1) {
            mp3Filename = "APT.mp3"; // 正面情緒
        } else if (emotion.indexOf("悲傷") != -1 || emotion.indexOf("不悅") != -1 ||
                   emotion.indexOf("不滿意") != -1 || emotion.indexOf("厭煩") != -1|| emotion.indexOf("嚴肅") != -1|| emotion.indexOf("平靜") != -1) {
            mp3Filename = "ThePowerOfGoodBye.mp3"; // 負面情緒
        } else {
            mp3Filename = "BirdsOfAFeather.mp3"; // 預設
        }


        // Play the recommended song
        tft.println("Playing: " + mp3Filename);
        sdPlayMP3(mp3Filename);
        delay(500);
    }
}


void sdPlayMP3(String filename) {
    fs.begin();
    String filepath = String(fs.getRootPath()) + "mp3/" + filename;
    Serial.println("Trying to play: " + filepath);
    File file = fs.open(filepath, MP3);
    if (file) {
        file.setMp3DigitalVol(175);
        file.playMp3();
        file.close();
    } else {
        Serial.println("File not found: " + filename);
        tft.println("File not found");
    }
    fs.end();
}
